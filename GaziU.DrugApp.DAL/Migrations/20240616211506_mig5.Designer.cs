// <auto-generated />
using System;
using GaziU.DrugApp.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GaziU.DrugApp.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240616211506_mig5")]
    partial class mig5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GaziU.DrugApp.DAL.Models.ActiveIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HalfLife")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ActiveIngredients");
                });

            modelBuilder.Entity("GaziU.DrugApp.DAL.Models.BarnesAkatiziOlcegi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Soru10Puan")
                        .HasColumnType("int");

                    b.Property<int>("Soru1Puan")
                        .HasColumnType("int");

                    b.Property<int>("Soru2Puan")
                        .HasColumnType("int");

                    b.Property<int>("Soru3Puan")
                        .HasColumnType("int");

                    b.Property<int>("Soru4Puan")
                        .HasColumnType("int");

                    b.Property<int>("Soru5Puan")
                        .HasColumnType("int");

                    b.Property<int>("Soru6Puan")
                        .HasColumnType("int");

                    b.Property<int>("Soru7Puan")
                        .HasColumnType("int");

                    b.Property<int>("Soru8Puan")
                        .HasColumnType("int");

                    b.Property<int>("Soru9Puan")
                        .HasColumnType("int");

                    b.Property<int>("ToplamPuan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("hastaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("hastaId");

                    b.ToTable("BarnesAkatiziKayitlari");
                });

            modelBuilder.Entity("GaziU.DrugApp.DAL.Models.BeckAnksiyeteOlcegiKayit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Soru10Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru11Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru12Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru13Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru14Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru15Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru16Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru17Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru18Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru19Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru1Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru20Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru21Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru2Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru3Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru4Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru5Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru6Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru7Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru8Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru9Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ToplamPuan")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("hastaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("hastaId");

                    b.ToTable("BeckAnksiyeteKayitlari");
                });

            modelBuilder.Entity("GaziU.DrugApp.DAL.Models.BeckDepresyonOlcegiKayit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Soru10Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru11Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru12Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru13Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru14Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru15Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru16Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru17Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru18Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru19Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru1Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru20Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru21Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru2Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru3Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru4Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru5Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru6Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru7Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru8Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Soru9Puan")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ToplamPuan")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("hastaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("hastaId");

                    b.ToTable("BeckDepresyonKayitlari");
                });

            modelBuilder.Entity("GaziU.DrugApp.DAL.Models.Doktor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("EPosta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Doktorlar");
                });

            modelBuilder.Entity("GaziU.DrugApp.DAL.Models.DoktorMuayeneKaydi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MuayeneNotları")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("hastaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("hastaId");

                    b.ToTable("doktorMuayeneKayitlari");
                });

            modelBuilder.Entity("GaziU.DrugApp.DAL.Models.Drug", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActiveIngredientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HastaId")
                        .HasColumnType("int");

                    b.Property<int>("MedicineTypeId")
                        .HasColumnType("int");

                    b.Property<string>("TradeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActiveIngredientId");

                    b.HasIndex("HastaId");

                    b.HasIndex("MedicineTypeId");

                    b.ToTable("Drugs");
                });

            modelBuilder.Entity("GaziU.DrugApp.DAL.Models.Hasta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoktorId")
                        .HasColumnType("int");

                    b.Property<string>("EPosta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DoktorId");

                    b.ToTable("Hastalar");
                });

            modelBuilder.Entity("GaziU.DrugApp.DAL.Models.HastaIlacKayit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HastaId")
                        .HasColumnType("int");

                    b.Property<int>("IlacId")
                        .HasColumnType("int");

                    b.Property<string>("KullanimBilgisi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HastaId");

                    b.HasIndex("IlacId");

                    b.ToTable("HastaIlacKayitlari");
                });

            modelBuilder.Entity("GaziU.DrugApp.DAL.Models.MedicineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MedicineTypes");
                });

            modelBuilder.Entity("GaziU.DrugApp.DAL.Models.BarnesAkatiziOlcegi", b =>
                {
                    b.HasOne("GaziU.DrugApp.DAL.Models.Hasta", "hasta")
                        .WithMany()
                        .HasForeignKey("hastaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hasta");
                });

            modelBuilder.Entity("GaziU.DrugApp.DAL.Models.BeckAnksiyeteOlcegiKayit", b =>
                {
                    b.HasOne("GaziU.DrugApp.DAL.Models.Hasta", "hasta")
                        .WithMany()
                        .HasForeignKey("hastaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hasta");
                });

            modelBuilder.Entity("GaziU.DrugApp.DAL.Models.BeckDepresyonOlcegiKayit", b =>
                {
                    b.HasOne("GaziU.DrugApp.DAL.Models.Hasta", "hasta")
                        .WithMany()
                        .HasForeignKey("hastaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hasta");
                });

            modelBuilder.Entity("GaziU.DrugApp.DAL.Models.DoktorMuayeneKaydi", b =>
                {
                    b.HasOne("GaziU.DrugApp.DAL.Models.Hasta", "hasta")
                        .WithMany()
                        .HasForeignKey("hastaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hasta");
                });

            modelBuilder.Entity("GaziU.DrugApp.DAL.Models.Drug", b =>
                {
                    b.HasOne("GaziU.DrugApp.DAL.Models.ActiveIngredient", "ActiveIngredient")
                        .WithMany()
                        .HasForeignKey("ActiveIngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GaziU.DrugApp.DAL.Models.Hasta", null)
                        .WithMany("HastaDrugs")
                        .HasForeignKey("HastaId");

                    b.HasOne("GaziU.DrugApp.DAL.Models.MedicineType", "MedicineType")
                        .WithMany()
                        .HasForeignKey("MedicineTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActiveIngredient");

                    b.Navigation("MedicineType");
                });

            modelBuilder.Entity("GaziU.DrugApp.DAL.Models.Hasta", b =>
                {
                    b.HasOne("GaziU.DrugApp.DAL.Models.Doktor", "Doktor")
                        .WithMany("hastalar")
                        .HasForeignKey("DoktorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doktor");
                });

            modelBuilder.Entity("GaziU.DrugApp.DAL.Models.HastaIlacKayit", b =>
                {
                    b.HasOne("GaziU.DrugApp.DAL.Models.Hasta", "Hasta")
                        .WithMany()
                        .HasForeignKey("HastaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GaziU.DrugApp.DAL.Models.Drug", "Ilac")
                        .WithMany()
                        .HasForeignKey("IlacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hasta");

                    b.Navigation("Ilac");
                });

            modelBuilder.Entity("GaziU.DrugApp.DAL.Models.Doktor", b =>
                {
                    b.Navigation("hastalar");
                });

            modelBuilder.Entity("GaziU.DrugApp.DAL.Models.Hasta", b =>
                {
                    b.Navigation("HastaDrugs");
                });
#pragma warning restore 612, 618
        }
    }
}
